{
  "hash": "c5ed0fdfc310bbac7cef5a37e881d7d9",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"looking back<br>and looking beyond\"\nsubtitle: \"a world of possibilities for<br>reproducible publishing with quarto\"\nauthor: \"mine Ã§etinkaya-rundel\"\nformat: \n  revealjs:\n    theme: discussion-slides.scss\n    highlight-style: a11y-dark\nrevealjs-plugins:\n  - drop\nexecute:\n  echo: true\nfig-width: 6\nfig-asp: 0.618\n---\n\n\n\n## one-stop shop\n\n::: {.center-align .large}\n[bit.ly/quarto-possibilities](https://bit.ly/quarto-possibilities)\n\n\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"https://mine-cetinkaya-rundel.github.io/quarto-world-of-possibilities-jsm24\" height=\"500\" width=\"900\" style=\"border: 1px solid #2e3846;\"></iframe>\n```\n\n\n:::\n\n## yes, dark mode is a possibility\n\n```{.yaml filename=\"_quarto.yml\"}\nformat:\n  html:\n    theme: \n      light: flatly\n      dark: darkly\n```\n\n<br><br>\n\n::: {.fragment .hand-blue-large}\nbut let's get back to business...\n:::\n\n## use `quarto`\n\n<hr>\n\n<img src=\"/talks/1-presentations/emil.png\" alt=\"Emil Hvitfeldt\" style=\"float:right;width:120px;height:120px;padding-left:20px;margin:0px\"/> Emil :: presentations with revealjs\n\n<hr>\n\n::: incremental\n-   Getting started with a reproducible presentation that looks \"good\" is *easy peasy* {{< fa lemon >}} *squeezy*\n\n-   Tooling is there and well-documented for going from good to \"stunning\" presentations\n\n-   But it takes willingness to learn / get familiar with / copy-paste trial-and-error with web design tools\n:::\n\n## slides with code + output\n\n\n\n::: {.cell output-location='fragment'}\n\n````{.cell-code}\n```{{r}}\n#| output-location: fragment\nplot(cars)\n```\n````\n\n::: {.cell-output-display}\n![](discussion_files/figure-revealjs/unnamed-chunk-1-1.png){width=576}\n:::\n:::\n\n\n\n## slides with code + output\n\n\n\n::: {.cell output-location='column-fragment'}\n\n````{.cell-code}\n```{{r}}\n#| output-location: column-fragment\nplot(cars)\n```\n````\n\n::: {.cell-output-display}\n![](discussion_files/figure-revealjs/unnamed-chunk-2-1.png){width=576}\n:::\n:::\n\n\n\n## use `quarto`\n\n<hr>\n\n<img src=\"/talks/3-websites/charlotte.png\" alt=\"Charlotte Wickham\" style=\"float:right;width:120px;height:120px;padding-left:20px;margin:0px\"/> Charlotte :: websites\n\n<hr>\n\n::: incremental\n-   Don't start from scratch!\n\n-   Tooling is there and well-documented for going from good to \"stunning\" websites, but it takes willingness to learn / get familiar with / copy-paste trial-and-error with web design tools -- sound familiar?\n\n-   There is no excuse for not having a personal (or otherwise) website made with Quarto\n:::\n\n## course websites + search\n\n\n\n```{=html}\n<iframe src=\"https://sta199-s24.github.io/\" height=\"550\" width=\"1000\" style=\"border: 1px solid #2e3846;\"></iframe>\n```\n\n\n## student project websites\n\n::: columns\n::: {.column width=\"50%\"}\n-   few `.qmd`s\n\n-   `_quarto.yml`\n:::\n\n::: {.column .fragment width=\"50%\"}\n-   GitHub repo\n\n-   GitHub action\n:::\n:::\n\n::: fragment\n``` {.yaml filename=\".github/workflows/render-website.yaml\"}\non:\n  push:\n    branches: main\n  workflow_dispatch:\n\nname: Render Website\n\njobs:\n  build-website:\n    runs-on: self-hosted\n    container:\n      image: ghcr.io/dukestatsci/r_gh_actions:latest\n    env:\n      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}\n    steps:\n      - uses: actions/checkout@v2\n\n      - name: Install packages\n        run: |\n          checklist::install_missing_pkgs()\n        shell: Rscript {0}\n        \n      - name: Render Quarto Project\n        run: |\n          quarto render &&\n          touch docs/.nojekyll\n      \n      - name: Deploy ðŸš€\n        uses: JamesIves/github-pages-deploy-action@v4\n        with:\n          clean: false\n          branch: gh-pages\n          folder: docs\n```\n:::\n\n## et voila!\n\n\n\n```{=html}\n<iframe src=\"https://sta199-s24.github.io/project-spelling_bees/\" height=\"550\" width=\"1000\" style=\"border: 1px solid #2e3846;\"></iframe>\n```\n\n\n## break `quarto`\n\n<hr>\n\n<img src=\"/talks/2-programmatic-manipulation/colin.png\" alt=\"Colin Rundel\" style=\"float:right;width:120px;height:120px;padding-left:20px;margin:0px\"/> Colin :: [**parsermd**](https://rundel.github.io/parsermd/) / [rundel.github.io/parsermd](https://rundel.github.io/parsermd)\n\n<hr>\n\n::: columns\n::: {.column width=\"70%\"}\n::: incremental\n-   A Quarto document is ultimately a document you can break apart\n\n-   The document is structured in a way that `quarto` leverages that you can get at with other tooling as well\n\n-   In a teaching context, breaking apart a Quarto document can enable automated section-level feedback or more...\n:::\n:::\n:::\n\n![](images/parsermd.png){.absolute top=\"250\" left=\"850\" width=\"200\"}\n\n## a look back at breaking `rmarkdown`\n\n1.  Make a template\n\n``` {.r filename=\"gen-template.R\"}\nlibrary(magrittr)\nlibrary(readr)\n\nparsermd::parse_rmd(\"lab-06.Rmd\") %>%\n  parsermd::as_tibble() %>%\n  dplyr::filter(sec_h3 != \"Load packages\" & !is.na(sec_h3)) %>%\n  parsermd::rmd_template(keep_content = TRUE, keep_headings = TRUE) %>%\n  write_rds(here::here(\".github/workflows/template.rds\"))\n```\n\n## a look back at break `rmarkdown`\n\n2.  Check against the a template with GitHub actions\n\n``` {.yaml filename=\".github/workflows/rmd_structure.yml\"}\non:\n  push:\n    paths:\n    - 'lab-06.Rmd'\nname: Check Rmd Structure\njobs:\n  test:\n    runs-on: self-hosted\n    container:\n      image: ghcr.io/statprog-s1-2020/hw2-docker:latest\n    steps:\n    - name: Checkout\n      uses: actions/checkout@master\n    - name: Check Structure\n      run: |\n        tpl = readRDS(\".github/workflows/template.rds\")\n        checklist::quit_on_failure({\n          parsermd::rmd_check_template(\"lab-06.Rmd\", tpl)\n        })\n      shell: Rscript {0}\n```\n\n## extend `quarto`\n\n<hr>\n\n<img src=\"/talks/4-closeread/andrew.png\" alt=\"Andrew Bray\" style=\"float:right;width:120px;height:120px;padding-left:20px;margin:0px\"/> Andrew :: closeread\n\n<hr>\n\n::: incremental\n-   How text is presented might (does?) have an effect on how much your readers focus on what they're reading\n\n-   When all of `quarto` isn't enough, dive into the extensions\n\n-   You -- yes, you, person with (probably) a stats degree and a passion for making things work / look exactly the way you want them -- can also extend Quarto!\n:::\n\n## so many extensions!\n\n\n\n```{=html}\n<iframe class=\"slide-deck\" src=\"https://quarto.org/docs/extensions/\" height=\"550\" width=\"1000\" style=\"border: 1px solid #2e3846;\"></iframe>\n```\n\n\n## as simple as...\n\n<br>\n\n::: center-align\neasy peasy {{< fa lemon >}} squeezy\n:::\n\n<br>\n\n. . .\n\n-   Install the `fontawesome` extension\n\n``` bash\nquarto add quarto-ext/fontawesome\n```\n\n. . .\n\n-   Use it with the `fa` shortcode\n\n![](images/fontawesome.png){width=\"593\"}\n\n## as not-so-simple as... {auto-animate=true}\n\n![](images/article.png){fig-align=\"center\"}\n\n## as not-so-simple as... {auto-animate=true .nostretch}\n\n![](images/article.png){fig-align=\"center\" width=\"500\"}\n\n-   Install the `fontawesome` extension\n\n``` bash\nquarto use template quarto-journals/jasa\n```\n\n. . .\n\n-   Render the `.qmd`\n\n## did someone say?\n\n> What was the plot you showed us earlier?\n\n. . .\n\n-   Install the `quarto-drop` extension\n\n``` bash\nquarto add r-wasm/quarto-drop\n```\n\n. . .\n\n-   Add the plugin to your presentation yaml\n\n``` yaml\n---\nformat: revealjs\nrevealjs-plugins:\n  - drop\n---\n```\n\n## thank you! + questions? {background-image=\"images/thank-you.png\"}\n\n::: {.center-align .large}\n[bit.ly/quarto-possibilities](https://bit.ly/quarto-possibilities)\n:::\n\n::: aside\nArtwork from \"Hello, Quarto\" keynote by Julia Lowndes and Mine Ã‡etinkaya-Rundel, presented at RStudio Conference 2022.\nIllustrated by Allison Horst.\n:::\n\n## questions?\n",
    "supporting": [
      "discussion_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}